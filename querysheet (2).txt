primary key--- a column or a combination of the column which finds the 
              row uniquely
              not null 
not null ---  duplicate are allowed but not empty

unique-- no duplicates but any number of null values 
         are allowed
check   --- condition

Foreign key -----refertial integrity

create table dept(
   deptid number primary key,
   dname  varchar2(40) not null,
   dloc varchar2(40),

)

create table employee(
  empno number primary key,
  ename varchar2(100) not null,
  doj date default sysdate,
  passport_no number(11) unique,
  job varchar2(50),
  grade char(2) check(grade in ('a','b','c','d')),
  sal number(12,2) check(sal>2000),
  deptno number references mydept(deptno)
  )



insert into employee values(101,'Reghuram','19-Mar-94',34234231,'Manager','d',2500,13);
insert into employee(empno,ename,sal,grade) values (102,'Revati',78888,'a');


select * from employee;




DML--- insert, delete,update

DDL --- create table

DQL ---- select


------to display all rows with mgr 7839
select *
from emp
where mgr=7839;

------to display all rows with mgr=7831 and working in deptno 10
select *
from emp
where mgr=7839 and deptno=10;

------to display all rows with mgr=7831 or working in deptno 10
select *
from emp
where mgr=7839 and deptno=10;


---display all employees with sal >1500 and sal <2500
select *
from emp
where sal>=1500 and sal<=2500;

select *
from emp
where sal between 1500 and 2500;


----display all employees whose manager is either 7839 or 7698 or 7901
select *
from emp
where mgr=7839 or mgr=7698 or mgr=7901;


select * from emp
where mgr in (7839,7698,7901)

-----list all employee who didnot earn any commission
select * from emp
where comm is null

-----list all employee who earn some commision
select * from emp
where comm is not null


-----list all employees with name ward
select *
from emp
where ename='WARD'

----- list all employee whose name starts with A
select * from emp
where ename like 'A%';


----- list all employee whose name ends with A
select * from emp
where ename like '%A';



----- list all employee whose name starts with A and ends with S
select * from emp
where ename like 'A%S';

----- list all employee whose name contais I at 2nd postion
select * from emp
where ename like '_I%'

----- list all employee whose name contais I at 2nd postion and E at secondlast position
select * from emp
where ename like '_I%E_'

----- list all employee whose name contais L at 3rd postion and E at secondlast position

select * from emp
where ename like '__L%'

----- list all employee whose name contais E somewhere
select * from emp
where ename like '%E%

----- list all employee whose name do not starts with A 
select * from emp
where ename not like 'A%';


faculty(fid,fname,sp.skill1,sp.skill2)
courses(cid,cname,rid,fid)
room(roomid,rname,rloc)
faculty 
facid  fname   sp1   sp2
123    Tejal  java  databse
133    jfdk   python  java


courses 
cid cname  fid  rid
121  Java   123   10 
131  C++           12 
141  .net 

room
rid rname   loc
10 Jasmin  first floor
12 Rose    second floor
13 Lotus   first floor 



create table courses(
  cid number primary key,
  cname varchar2(20) not null,
  fid number,
  rid number,
  constraint fk_rm Foreign key rid references room(rid),
  constraint fk_fac Foreign key fid references faculty(fid)
)

foreign key,primary key,unique,check  table level constraint

not null, default field level constraints

modify table
add column , constraint
drop column, constraint
modify 

alter table courses
drop constraint fk_rm

alter table courses
modify cname varchar2(20) not null unique;

DDL

create table
Alter table
drop table -----> delete structure and data of a table
truncate table ----> will only data but empty table will remain

DML
  insert
  delete
  update

DQL
  select

TCL
  commit---- will make the changes permanent
  rollback ---- same as undo
  savepoint

delete 3 record
savepoint A
added 2 records
savepoint B


rollback 



select empno,ename,sal,sal+comm
from emp
where ename='Allen';

----- display data arranged in sorted order of manager
select empno,ename,sal,mgr,comm
from emp
order by mgr
/


select *
from emp
where ename='allen'

-----generate email id by concatenating name follwed by 
3 letter of job followed by @mycompany.com

select empno,ename,concat(concat(ename,substr(job,1,3)),'@mycompany.com')
  2  from emp;


---- to display all deparments which has more than 3 employees 
select deptno,count(*)
from emp
group by deptno
having count(*)>3;

-----find all departments who has minimum 2 salesman
select deptno,count(*) count
from emp
where job=salesman
group by deptno
having count(*)>=2

----- to find all employees with salary >2000
select *
from emp
where sal>2000

---- find how many employees are in each department
select deptno,count(deptno) 
from emp
group by deptno



---find all jobs for which avg sal>2000
select job
from emp
where deptno=20
group by job
having avg(sal)>2000 

---find all employees whose name is SMITh and with sal>2500 
select * 
from emp
where ename='SMITH' and sal>2000;
500+2=502

 2 

select * 
from emp
where  sal>2000 and ename='SMITH';

500 +300=800
300 True

-------

Nested query joins
if the o/p columns are from single table then use nested query
if o/p columns are from multiple tables then go for joins

------display all employees who works in HR department



select *
from emp
where deptno=(select deptno   
              from dept
              where dname='HR');


----find all employee names who works in SMITH's dept
select ename,deptno
  2  from emp
  3  where deptno in (select deptno
  4             from emp
  5*            where ename='SMITH') and ename<>'SMITH'


----- find all employees whose manager is same as ALLEN's manager
the child query will get executed first and only once
and then parent query will get executed.

select *
from emp where mgr in (
		   select mgr
		   from emp
		   where ename='ALLEN' )


------find all employees whose sal > SMITH and < ALLen's sal
select *
from emp 
where sal between (select sal
            from emp where ename='SMITH') and (select sal 
                                                    from emp
                                                     where ename='ALLEN')

------find all employees who do not work in WARD's department
select *
from emp
where deptno not in (select deptno
                     from emp
                     where ename='WARD')



----find all employees whose sal > minimum sal of dept 10
select *
from emp                       
where sal > (select min(sal)
             from emp
              where deptno=10)     



------find all employees with sal > avg sal of 'SMITH's dept
select *
from emp
where sal > (select avg(sal)
            from emp
            where deptno = (select deptno
                            from emp
                            where ename='SMITH')); 

to find all employees with sal < avg sal of 'HR' department
select *
from emp
where sal < (select avg(sal)
             from emp
             where deptno=(select deptno
                           from dept
                           where dname='HR'))



------ all employees with sal > avg sal of their own dept
co related query

select *
from emp e
where sal < (select avg(sal)
             from emp d
             where d.deptno=e.deptno);

---find all employees whose sal > avg sal of all employees who work under same manager 
of his/her own

select *
from emp e
where sal > (select avg(sal)
             from emp d
             where d.mgr=e.mgr);


exists/not exists

exists ---- gives true if the child query returns some rows

not exists gives true if child query did not return any row

-----find all departments in which no employees are there

select *
from dept 
where not exists (select * from emp 
              where emp.deptno=dept.deptno)



faculty
room
course(cid,cname,rid,fid)

select *
from room r
where not exists (select *
                  from course c
                  where c.rid=r.rid) 

room 50 rows and 5 columns
in course table 100 rows and 3 column
50
100
5000
150


------ find all facuties who are not assigned for any course
SELECT * 
FROM FACULTY F
WHERE NOT EXISTS
            (SELECT * FROM COURSES C 
             WHERE C.FID=F.FID); 



-----display all course and facuties assigned to the course
course 

select *
from course c,faculty f
where c.fid=f.fid

join
  cross join
  inner join
     equijoin
     non equi join
     self join  
  outer join
     left outer
     right outer
     full outer join

select empno,ename,e.deptno,d.deptno,dname
from emp e,dept d
where e.deptno=d.deptno

select empno,ename,e.deptno,d.deptno,dname
from emp e inner join dept d
on e.deptno=d.deptno


---- display employee name and department name for all 
who are in deptno 10 or 20
select ename,dname,e.deptno,d.deptno
from emp e inner join dept d on e.deptno=d.deptno
where e.deptno in (10,20)

----display all courses and faculty names
for all facuties whose special subject is java
select *
from courses c inner join faculty f on c.fid=f.fid
where f.special_skill1='java' or f.special_skill2='java'

-----find all employees and their manager names  (self join)
select e.empno,e.ename,e.mgr,m.empno "mgr no",m.ename mgrname
from emp e, emp m
where e.mgr=m.empno
 
select e.empno,e.ename,e.mgr,m.empno "mgr no",m.ename mgrname
from emp e inner join emp m
on e.mgr=m.empno


---course details with room name
select cid,cname,c.rid,r.rid,r.rname
fron courses c inner join room r on c.rid=r.rid

---display all courses and faculty names

select *
from courses c inner join faculty f 
on c.fid=f.fid

-----display course name,room name,faculty name
select c.cid,c.cname,f.fname,r.rname
from courses c inner join faculty f on c.fid=f.fid 
inner join room on c.rid=r.rid

select c.cid,c.cname,f.fname,r.rname
from courses c , faculty f,room r 
where  c.rid=r.rid and c.fid=f.fid 

-------display ename,dname and grade of employee
select ename,dname,grade
from emp e,dept d,salgrade s
where e.deptno=d.deptno and sal between s.lowsal and s.hisal

select ename,dname,grade
from emp e inner join dept d on e.deptno=d.deptno  inner join salgrade s
on sal between s.lowsal and s.hisal

--------display all departments in which no employee
select ename,dname,grade
from emp e right outer join dept d on e.deptno=d.deptno 
where e.empno is null;


select ename,dname,grade
from emp e , dept d   
where nd e.deptno(+)=d.deptno 
union
select ename,dname,grade
from emp e , dept d   
where nd e.deptno=d.deptno(+); 

----- find all courses and rooms which are assigned to some courses and 
also rooms which are vecant
select c.cname,c.cid,r.rname,r.rid
from courses c rigth outer join room r on
c.rid=r.rid


selct * from emp
where deptno=10
intersect
selct * from emp
where sal>2000


union, intersect, minus


------list all employees working in our company
select *
from Indemp
union
selct * from USemp
union
select * from JAPANEmp

------list all employees working in either India or US or both locations
shows common records twice
select *
from Indemp
union all
selct * from USemp


------- list all employees working only at india
select *
from Indemp
minus
selct * from USemp

------------- list all employees who are working in both countries
select *
from Indemp
intersect
selct * from USemp



------views
when the query is complicated and you want to hide complex logic
if you want to hide table name for security
if you want to give limited access to data 

create view mydept10
as
select *
from emp
where deptno=10;

select * from mydept10

create view AllEmp
as
select *
from Indemp
union
selct * from USemp
union
select * from JAPANEmp


create view mydept10
as
select *
from emp
where deptno=10
with check option;
